// Default config file for Horizon Exchange. This file is bundled in the exchange api jar file.
// To run the exchange svr with different values, copy this to /etc/horizon/exchange/config.json.
// In your version of the config file, you only have to set what you want to override.
{
	"api": {
		"limits": {
			"maxNodes": 1000,		// maximum number of nodes 1 user is allowed to create
			"maxAgbots": 1000,		// maximum number of agbots 1 user is allowed to create
			"maxAgreements": 1000,	// maximum number of agreements 1 node or agbot is allowed to create
			"maxMessagesInMailbox": 500,	// maximum number of msgs currently in 1 node or agbot mailbox (the sending side is handled by rate limiting)
			"maxBlockchains": 100,		// maximum number of BC types or instance definitions 1 user is allowed to create
			"maxMicroservices": 100,		// maximum number of microservices 1 user is allowed to create
			"maxWorkloads": 100,		// maximum number of workloads 1 user is allowed to create
			"maxPatterns": 100		// maximum number of patterns 1 user is allowed to create
		},
		"specRef": {
			"prefix": "https://bluehorizon.network/documentation/",
			"suffix": "-node-api"
		},
		"objStoreTmpls": {
			"prefix": "https://tor01.objectstorage.softlayer.net/v1/AUTH_bd05f276-e42f-4fa1-b7b3-780e8544769f",
			"microDir": "microservice-templates",
			"workloadDir": "workload-templates",
			"suffix": ".json"
		},
		"db": {
			"driverClass": "org.postgresql.Driver",
			"jdbcUrl": "jdbc:postgresql://sl-us-dal-9-portal.2.dblayer.com:10869/compose",		// the back-end db the exchange uses
			"user": "admin",
			"password": "",			// set this in your own version of this config file
			"minPoolSize": 1,
			"acquireIncrement": 1,
			"maxPoolSize": 50
		},
		"smtp": {		// set all of these in your own version of this config file
			"host": "",		// the SMTP relay svr the exchange uses to send reset pw emails
			"user": "",
			"password": ""
		},
		"logging": {
			"level": ""		// default level is INFO. For possible values, see http://logback.qos.ch/apidocs/ch/qos/logback/classic/Level.html
		},
		"microservices": {
			"disable": true		// when disabled, the microservices templates will not be retrieved and returned for PUT /nodes/{id}
		},
		"root": {
			"password": "",			// set this in your own version of this config file
			"email": "",
			"frontEndHeader": ""     // Warning: on set this to a non-blank value when you have a front end (e.g. haproxy, data power, etc.) protecting the exchange that authenticates and authorizes all clients. If this is the case, set this value to a header field name the front end will set. This will give root privilege to the operation.
		},
		"acls": {
			"ANONYMOUS": ["RESET_USER_PW"],
			"USER": ["READ_MYSELF", "WRITE_MYSELF", "RESET_USER_PW", "CREATE_NODE", "READ_MY_NODES", "WRITE_MY_NODES", "READ_ALL_NODES", "CREATE_AGBOT", "READ_MY_AGBOTS", "WRITE_MY_AGBOTS", "DATA_HEARTBEAT_MY_AGBOTS", "READ_ALL_AGBOTS", "STATUS", "READ_MY_BLOCKCHAINS", "READ_ALL_BLOCKCHAINS", "WRITE_MY_BLOCKCHAINS", "CREATE_BLOCKCHAINS", "READ_MY_BCTYPES", "READ_ALL_BCTYPES", "WRITE_MY_BCTYPES", "CREATE_BCTYPES", "READ_MY_MICROSERVICES", "READ_ALL_MICROSERVICES", "WRITE_MY_MICROSERVICES", "CREATE_MICROSERVICES", "READ_MY_WORKLOADS", "READ_ALL_WORKLOADS", "WRITE_MY_WORKLOADS", "CREATE_WORKLOADS", "READ_MY_PATTERNS", "READ_ALL_PATTERNS", "WRITE_MY_PATTERNS", "CREATE_PATTERNS", "READ_MY_ORGS"],
			"ADMINUSER": ["ALL_IN_ORG"],
			"SUPERUSER": ["ALL"],
			"NODE": ["READ_MYSELF", "WRITE_MYSELF", "READ_MY_NODES", "SEND_MSG_TO_AGBOT", "READ_ALL_AGBOTS", "READ_ALL_BLOCKCHAINS", "READ_ALL_BCTYPES", "READ_ALL_MICROSERVICES", "READ_ALL_WORKLOADS", "READ_ALL_PATTERNS", "READ_MY_ORGS"],
			"AGBOT": ["READ_MYSELF", "WRITE_MYSELF", "DATA_HEARTBEAT_MY_AGBOTS", "READ_MY_AGBOTS", "READ_ALL_AGBOTS", "READ_ALL_NODES", "SEND_MSG_TO_NODE", "READ_ALL_BLOCKCHAINS", "READ_ALL_BCTYPES", "READ_ALL_MICROSERVICES", "READ_ALL_WORKLOADS", "READ_ALL_PATTERNS", "READ_MY_ORGS"]
		}
	}
}
